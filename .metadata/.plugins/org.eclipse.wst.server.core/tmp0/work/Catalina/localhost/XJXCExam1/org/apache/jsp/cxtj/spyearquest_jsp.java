/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.0-RC1
 * Generated at: 2017-07-07 00:49:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cxtj;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.servlet.ServletUtilities;
import java.io.*;
import java.sql.*;

public final class spyearquest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      com.mingri.dbconn.DBResult rst = null;
      rst = (com.mingri.dbconn.DBResult) _jspx_page_context.getAttribute("rst", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (rst == null){
        rst = new com.mingri.dbconn.DBResult();
        _jspx_page_context.setAttribute("rst", rst, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

   String year=request.getParameter("year");
   //获得某年按月份分组的总销售额的SQL语句
 	String strSql="select * from (select sum(je) as sumje,month(xsdate) as xsmonth from tb_sell  where  year(xsdate)='"+
 			year+"' group by month(xsdate) union select 0,MonthName from GetMonth() where MonthName not in (select month(xsdate) as xsmonth from tb_sell where year(xsdate)='"+
 					year+"' group by month(xsdate))) temp order by temp.xsmonth";  
   ResultSet rs=rst.getResult(strSql);
   int counts=0;
   if(!rs.next()){
     out.println("<script language='javascript'>alert('"+year+"年没有销售记录');"+
                "window.location.href='main.jsp';</script>");
   }

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

DefaultCategoryDataset dataset1=new DefaultCategoryDataset();
for(int j=1;j<=12;j++){   //循环从1循环到12
	float sumje=Float.valueOf(rs.getString("sumje"));
	int y=rs.getInt("xsmonth");
	dataset1.addValue(sumje,y+"月",y+"月");
	rs.next();
}
//创建JFreeChart组件的图表对象
JFreeChart chart=ChartFactory.createBarChart3D(
									year+"年销售额分析图",		//图表标题
									"月份",					//x轴的显示标题
									"销量",					//y轴的显示标题
									dataset1,				//数据集
									PlotOrientation.VERTICAL,//图表方向(垂直)
									true,					//是否包含图例
									false,					//是否包含提示
									false					//是否包含URL
									);
//设置图表的文件名
// 固定用法
ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());
String fileName=ServletUtilities.saveChartAsPNG(chart,500,300,info,session);
String url=request.getContextPath()+"/servlet/DisplayChart?filename="+fileName;


      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<title>年销售额分析</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n");
      out.write("<link href=\"../CSS/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"100%\"  border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>&nbsp;<img src=\"");
      out.print(url );
      out.write("\"></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
